{"version":3,"sources":["constants/index.js","components/Loading/Loading.js","components/Button/Button.js","components/Search/Search.js","components/Sort/Sort.js","components/Table/Table.js","components/App/App.js","index.js"],"names":["PATH_BASE","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","Loading","Button","onClick","className","children","type","defaultProps","Component","ButtonWithLoading","isLoading","rest","Search","this","input","focus","props","value","onChange","onSubmit","ref","el","Sort","sortKey","activeSortKey","onSort","sortClass","classNames","largeColumn","width","midColumn","smallColumn","Table","isSortReverse","state","setState","onDismiss","sortedList","reverseSortedList","style","map","item","key","objectID","href","url","title","author","num_comments","points","App","_isMounted","results","searchKey","searchTerm","error","needsToSearchTopStories","fetchSearchTopStories","page","axios","get","then","setSearchTopStories","data","catch","onSearchSubmit","event","preventDefault","updateSearchTopStoriesState","hits","prevState","oldHits","updatedHits","result","id","filter","onSearchChange","target","require","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd548989.chunk.js","sourcesContent":["import { sortBy } from 'lodash';\n\nexport const DEFAULT_QUERY = 'redux';\nexport const DEFAULT_HPP = '100';\nexport const PATH_BASE = 'https://hn.algolia.com/api/v1';\nexport const PATH_SEARCH = '/search';\nexport const PARAM_SEARCH = 'query=';\nexport const PARAM_PAGE = 'page=';\nexport const PARAM_HPP = 'hitsPerPage=';\nexport const SORTS = {\n  NONE: list => list,\n  TITLE: list => sortBy(list, 'title'),\n  AUTHOR: list => sortBy(list, 'author'),\n  COMMENTS: list => sortBy(list, 'num_comments').reverse(),\n  POINTS: list => sortBy(list, 'points').reverse()\n};\n","import React from 'react';\n\nconst Loading = () =>\n  <div>Loading ...</div>;\n\nexport default Loading;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Loading from '../Loading/Loading';\nimport './Button.css';\n\nconst Button = ({ onClick, className, children }) =>\n  <button\n    onClick={ onClick }\n    className={ className }\n    type=\"button\"\n  >\n    { children }\n  </button>;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired\n};\n\nButton.defaultProps = {\n  className: ''\n};\n\nconst withLoading = (Component) => ({ isLoading, ...rest }) =>\n  isLoading\n    ? <Loading />\n    : <Component { ...rest } />;\n\nconst ButtonWithLoading = withLoading(Button);\n\nexport { ButtonWithLoading, Button };\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass Search extends Component {\n  componentDidMount() {\n    if (this.input) {\n      this.input.focus();\n    }\n  }\n\n  render() {\n    const { value, onChange, onSubmit, children } = this.props;\n    return (\n      <form>\n        <input\n          type=\"text\"\n          value={ value }\n          onChange={ onChange }\n          ref={ el => this.input = el }\n        />\n        <button\n          type=\"submit\"\n          onClick={ onSubmit }\n        >\n          { children }\n        </button>\n      </form>\n    );\n  }\n}\n\nSearch.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n  children: PropTypes.node\n};\n\nexport default Search;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button } from '../Button/Button';\n\nconst Sort = ({ sortKey, activeSortKey, onSort, children }) => {\n  const sortClass = classNames(\n    'button-inline',\n    { 'button-active': sortKey === activeSortKey }\n  );\n\n  return (\n    <Button\n      onClick={ () => onSort(sortKey) }\n      className={ sortClass }\n    >\n      { children }\n    </Button>\n  );\n};\n\nexport default Sort;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { SORTS } from '../../constants';\nimport { Button } from '../Button/Button';\nimport Sort from '../Sort/Sort';\nimport './Table.css';\n\nconst largeColumn = {\n  width: '40%'\n};\n\nconst midColumn = {\n  width: '30%'\n};\n\nconst smallColumn = {\n  width: '10%'\n};\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sortKey: 'NONE',\n      isSortReverse: false\n    };\n  }\n\n  onSort = (sortKey) => {\n    const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\n    this.setState({ sortKey, isSortReverse });\n  }\n\n  render() {\n    const {\n      list,\n      onDismiss\n    } = this.props;\n\n    const {\n      sortKey,\n      isSortReverse\n    } = this.state;\n\n    const sortedList = SORTS[sortKey](list);\n    const reverseSortedList = isSortReverse\n      ? sortedList.reverse()\n      : sortedList;\n\n    return (\n      <div className=\"table\">\n        <div className=\"table-header\">\n      <span style={ largeColumn }>\n        <Sort\n          sortKey={ 'TITLE' }\n          onSort={ this.onSort }\n          activeSortKey={ sortKey }\n        >\n          Title\n        </Sort>\n      </span>\n          <span style={ midColumn }>\n        <Sort\n          sortKey={ 'AUTHOR' }\n          onSort={ this.onSort }\n          activeSortKey={ sortKey }\n        >\n          Author\n        </Sort>\n      </span>\n          <span style={ smallColumn }>\n        <Sort\n          sortKey={ 'COMMENTS' }\n          onSort={ this.onSort }\n          activeSortKey={ sortKey }\n        >\n          Comments\n        </Sort>\n      </span>\n          <span style={ smallColumn }>\n        <Sort\n          sortKey={ 'POINTS' }\n          onSort={ this.onSort }\n          activeSortKey={ sortKey }\n        >\n          Points\n        </Sort>\n      </span>\n          <span style={ smallColumn }>\n          Archive\n        </span>\n        </div>\n        { reverseSortedList.map(item =>\n            <div\n              key={ item.objectID }\n              className=\"table-row\"\n            >\n        <span style={ largeColumn }>\n          <a href={ item.url }>{ item.title }</a>\n        </span>\n              <span style={ midColumn }>\n          { item.author }\n        </span>\n              <span style={ smallColumn }>\n          { item.num_comments }\n        </span>\n              <span style={ smallColumn }>\n          { item.points }\n        </span>\n              <span style={ smallColumn }>\n          <Button\n            onClick={ () => onDismiss(item.objectID) }\n            className=\"button-inline\"\n          >\n            Dismiss\n          </Button>\n        </span>\n            </div>\n        ) }\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      objectID: PropTypes.string.isRequired,\n      author: PropTypes.string,\n      url: PropTypes.string,\n      num_comments: PropTypes.number,\n      points: PropTypes.number\n    })\n  ).isRequired,\n  onDismiss: PropTypes.func.isRequired\n};\n\nexport default Table;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport { DEFAULT_HPP, DEFAULT_QUERY, PARAM_HPP, PARAM_PAGE, PARAM_SEARCH, PATH_BASE, PATH_SEARCH } from '../../constants';\nimport { ButtonWithLoading } from '../Button/Button';\nimport Search from '../Search/Search';\nimport Table from '../Table/Table';\nimport './App.css';\n\nclass App extends Component {\n  _isMounted = false;\n\n  state = {\n    results: null,\n    searchKey: '',\n    searchTerm: DEFAULT_QUERY,\n    error: null,\n    isLoading: false,\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  needsToSearchTopStories = (searchTerm) => {\n    return !this.state.results[searchTerm];\n  };\n\n  fetchSearchTopStories = (searchTerm, page = 0) => {\n    this.setState({ isLoading: true });\n\n    axios.get(`${ PATH_BASE }${ PATH_SEARCH }?${ PARAM_SEARCH }${ searchTerm }&${ PARAM_PAGE }${ page }&${ PARAM_HPP }${ DEFAULT_HPP }`)\n      .then(results => this._isMounted &&\n        this.setSearchTopStories(results.data))\n      .catch(error => this._isMounted && this.setState({ error }));\n  };\n\n  onSearchSubmit = (event) => {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n\n    if (this.needsToSearchTopStories(searchTerm)) {\n      this.fetchSearchTopStories(searchTerm);\n    }\n\n    event.preventDefault();\n  };\n\n  updateSearchTopStoriesState = (hits, page) => (prevState) => {\n    const { searchKey, results } = prevState;\n\n    const oldHits = results && results[searchKey]\n      ? results[searchKey].hits\n      : [];\n\n    const updatedHits = [\n      ...oldHits,\n      ...hits\n    ];\n\n    return {\n      results: {\n        ...results,\n        [searchKey]: { hits: updatedHits, page }\n      },\n      isLoading: false\n    };\n  };\n\n  setSearchTopStories = (result) => {\n    const { hits, page } = result;\n\n    this.setState(this.updateSearchTopStoriesState(hits, page))\n  };\n\n  onDismiss = (id) => {\n    const { searchKey, results } = this.state;\n    const { hits, page } = results[searchKey];\n\n    const isNotId = item => item.objectID !== id;\n    const updatedHits = hits.filter(isNotId);\n\n    this.setState({\n      results: {\n        ...results,\n        [searchKey]: {\n          hits: updatedHits,\n          page\n        }\n      }\n    });\n  };\n\n  onSearchChange = (event) => {\n    this.setState({ searchTerm: event.target.value });\n  };\n\n  render() {\n    const {\n      searchTerm,\n      results,\n      searchKey,\n      error,\n      isLoading,\n    } = this.state;\n    const page = (results && results[searchKey] && results[searchKey].page) ||\n      0;\n    const list = (\n      results &&\n      results[searchKey] &&\n      results[searchKey].hits\n    ) || [];\n\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search\n            value={ searchTerm }\n            onChange={ this.onSearchChange }\n            onSubmit={ this.onSearchSubmit }\n          >\n            Search\n          </Search>\n        </div>\n        {\n          error\n            ? <div className=\"interactions\">\n              <p>\n                Something went wrong.\n              </p>\n            </div>\n            : <Table\n              list={ list }\n              onDismiss={ this.onDismiss }\n            />\n        }\n        <div className=\"interactions\">\n          <ButtonWithLoading\n            isLoading={ isLoading }\n            onClick={ () => this.fetchSearchTopStories(searchKey, page + 1) }\n          >\n            More\n          </ButtonWithLoading>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nrequire('./index.css');\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}